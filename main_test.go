package main

import (
	"crypto/rsa"
	"math/big"
	"os"
	"testing"
	"time"
)

func TestMain(m *testing.M) {
	// inject testkey
	privateKey = &rsa.PrivateKey{}
	privateKey.PublicKey.N, _ = (&big.Int{}).SetString("28827883207289990638900625859120377877385233383755094228217011055087930226619414919299467929129898995320763552849155660284062535317301470795766090881816150350581140268872085996383034045767727222442997788623117161294395213850085244343276234855468127939652343387441202858848076667307450742292488633088310895373486717413015713017217770790459766027617570805131303122190867947260784382014681370564239684213421333515607388258501139863031386325628355176825793041904070628348481198840804995803015739362486918223200794273261549429027313761299734863946830293584929350645951892512418096394537622233062902357157154215425473489563", 10)
	privateKey.PublicKey.E = 65537
	privateKey.D, _ = (&big.Int{}).SetString("17623906626535861649727519960808658620860227974327961385900220713995956672715160568177555915719647422776778194126283941665643064833956402168289122133616825303971557532578985878680480371053447043569299012755753424545237631233006017972408038599862459588173257704216232566986695145526043630936583144991627085982277380548575258290254318053877786827120656802091114369510205548356248967286099485691447377988751843640803861685127603596532879483457449101629444321738194680646703269123463557244765195266889408004057433578370216323214266265851692991615094555123504974678677515950900244073903898466007714297652894384058926753777", 10)
	p1, p2 := &big.Int{}, &big.Int{}
	p1.SetString("171516512860915944869254169530469055245756689161397514200818457929914848359039467028759705172640429171953624947783227076683296423760500340759223121140165608043725183275457862265749501861771458757897823405955676840989088491852265982664569595552006352077278191155938354604749950640300150089371399966074996075487", 10)
	p2.SetString("168076430230754178912754570887153626667064831323438218318249433856814510218585496762645485673615987040020690798907206529023292749485514653031355711365510751210187250314400416841060561810451117320793610700939155991060903643502218454699161515206358192361004147049232966572110843514922499386907260283192890366149", 10)
	privateKey.Primes = []*big.Int{p1, p2}
	privateKey.Precomputed.Dp, _ = (&big.Int{}).SetString("83147704809560408386729240278812462490088587688584470202697761980123054873049466819822765659703054384883937595801164341567435352233011220017109080088258564370618014218602800586617138771233669777334509474504750124587093252279450425488442263458546985852986944950414536279468249718372462402755981328442997090411", 10)
	privateKey.Precomputed.Dq, _ = (&big.Int{}).SetString("159249064424350836010001908528583921264192604193492167271490892096661382303478438461883690631295065615607745169265346131493680871558097446938096539317353404891840903737929625764768841808748678304388044257058102923004208488995075376421631052485448097329089712849567741265166590293408495955414595225366777961853", 10)
	privateKey.Precomputed.Qinv, _ = (&big.Int{}).SetString("148856317347025693250614892222817011801575490061659113428309671470626338957768967922151109057089248412719084742971716625350039508997550756785500111550071284489072933342881152446145607454799353707949043286223120383523618196810880280731373283934555424206830388618735454854286768948091569823879823243333380345796", 10)
	
	// inject testtime
	now = func() time.Time { return testtime}
	
	result := m.Run()
	os.Exit(result)
}


var testtime = time.Time{}

var Pkcs8Key = `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDneX9gK79MyaGF
+cjqSJc8HnmuE01/r5GvS4+AHHb+thGRxxVsRXMI3oCHwIN6jEkS0kwe6HblovbM
yXJzDav5z30SyWlwbXo/XQ1/BM/19zKUxuZozsGAT4RLz8XZhEg9vqZytnN7uCPF
nAO1shwbnoErZpwSzVEgHMcUgxTUwOuGIAkP/h6gw6wJlgsj7tc/YDG5oSMwpBC5
0wh3uMCNgVpLvdI19WMc20LyzqZd3sepcaJM7+8twk5ZESQ6ud8XFezn1/etd9Sy
iFlJ63dkhGZc6/z+3B9wtWtqzfDefT0nQ8DVSZiWxkD8XF68ElAYoCf4Ab6DcPaU
lpAYYicxAgMBAAECggEBAOXHfUNZihhO2/HkKKcxkjeSxRWhgcAr6AHMj1IMb6+f
y0ccCs8lDfGS9qJL3/iqA+wUKI5SE50XrclSfDNsMfjVGQKqP+nkM4Ns+vXJMCup
zWNVIuqNvBaEWP7s7SllIFVyyUZ8iZ0aCSCkJCac/TwJl44e2PXtLQgkqRdanDYo
vRgxe9I1FmCrU7QH+kO37D1QwVc83FO+FT4CWil8yFZoxoQSsoOhxgWAeuX+nto1
TcOfenUQ9oHL5nsJAg8B+iMK6lSrwTzMOK8AM/DqZij9YzH69SA8aOg9IgHz7X5x
v+v2zj2NRQfX+REw32O+oREFCZ7sq0EerocYJIYEw6UCgYEA83vyjMGyWVqpmFfe
aEAYiQBtNvE5+ML/4skpedRuyk8iGDYzzxwF0dqutpp4okFhXNeytxC6wnormaVY
8qaCxkMaeUcRvdCb5s11M7qdmVdV+t1G1rvbkFHgLxJGbDqGOQedTxZHU5cVxSRf
h3Y8TnojV3Ntw7gxO+UhC5ZjgbcCgYEA81+DlGGnFImnxXHyov1T0B+5j7EIPD1d
cJhJmu5zp221t+8zD9Joccb+kOhmDUTLrUcrYxv1adMycNHE7lFY8gRX4zX4TKVz
zJOCpT4XkmI1+HD+lX7wK09uICu5wC8A7U08AmRMB21es+m8G5IChBb2IN307QKr
fauEeN8PflcCgYA0Eo4NDF/YPEuJCUHHie21XyH8XhrH2Oxg1CTKqWQIYGQqSW1L
HfMgrmQvKVojWVg5Qug1vp4yeW5ZrcMYIgRV4oQG6+wfbD3rXoVySrbp1IPO4wQD
aKnMc7Y+Wuo0u095YueBwoH+npFJWD4V+nNrVTO5wDX5Zash5B7tG3ysgQKBgHME
2A2/XRRivkydPrvzF7JL3Anh8+9sXQXCoz66pSQiwHgOb0Zx/XSQRG09uEVbFxts
gD/VzdVWwAb7zKOJBI1UqiiysAehRioQKPVpdAB1s+YXmOoUVPNTFcvUfnQqgrik
ANFsj1YPRWun8oPhLJk6tNXxsDh3Q48gCXqKiSr/AoGAPFrXM9f63CVNcLfS9qG2
BOtfyb8kIxMATMnAbidlqWunEBHGIRgN2/j2wfrByVmYPLWrQqeD5NOIG4opBS5B
EQaK+AC5RRS1dxNlOOLBAeJyuKAL/DoYKHutbkn7EUwC1h+d6K1M/KwqNelVuYiI
6LfOJU7Lsj7CwHVkIjpKpDE=
-----END PRIVATE KEY-----`

var Pkcs1Key = `-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA5Fxe5Dph0fdHeaBLeWKb4L39nI6PVkNTc4NwS81/vJUfKpaE
oLQ1GyjIhnWOhFGXaMT88MRcftVhh+qJ2tAe61wDxVqDxxiF0cqCfgqFrGo0PZ/W
1Tz1eTqto0SWPEC5PT8aKoCTYx5x44Kamv8mHbXJnEydlLKdeqZQYJnPRmxHgy2Y
MRS/90dUl91uCarDaNxD6u5LETCbKlNrS4GwRiyXWP5JrDbTRpLaCiSX4CLY6rN2
Lgq4UrzOAzlJrk8GhUlBUC3sfeY+rWkViQz7G25n1b8MOrjKY+zTVYDOzKsqysnm
3hKixRoUi075QZctgoqUzqpZTTa8hqVPma+qmwIDAQABAoIBAQCLm7UfjlmzRZva
zZaWtSRa94wOpFEZCbwBCMAkd5O6NOiC3tZicQluezZsjX39guwvzw5cG4/4sncX
4tk4frgIZ46ensGlfGaDZWz1pXUnfR5G9msenk/sN2VkRVAbse4NdYCHr2dr13cF
AhmG3Knuy+5fsa888x23l+nXxPClOfGvsTc/wj3PA0bBBx9wfFVIGgHoI79rcrnJ
FNueZhUI4udWHfLcEz0xdVtIWkxc12zTHv4yEnVCwZUL1wBRhMXiAoL8IE8m/dih
XUu/DBl8YMdHF/5QHMIcZTm4B0ikJ91NZfkI7vPv+cxcpCsPV9A9l4XQfuKzKvGE
c4eZaefxAoGBAPQ/ZCR/BhdiQSAI6M0kp2og1iInNYoJ4PB4XnlAC8XcYAM+YTHW
Ot40q1wrk32fS/hfJNPDLQ2Sq7+8yh3FlF2nB/IzS0Y6mE0iHdRkYRRWTsVGtsN4
vm+aLfo7sq2KHCwgW1l2pKq1MOLyMauNkIC2gJxc2u+V76onIlTf5SvfAoGBAO9Z
Sb8IpoNcpkaGDKmjSuY+JoA2aidavmnriNTWQElD1Vfr6UmcDoedNCXMidbtOnCV
6MS8HCxFA1hiPao89fUnPum7zvY2VxvCBspsyK0YgRobNXytgxZtIM97qONMcjug
OeM/OihfkEahH5sLWgJKsTmHCBEoX5CHyLn0yBjFAoGAdmgAyTyXHGDyh3AqQ8Eg
M+/lPztY1imB1bHUwt0MmAgEt63W+o0Ljstjw1QQtVazQp4FQW+d+LWA83u3VAWD
rn8Z+A1r0Yj4anQ+l8dt1KkemL52PX7ce0f4QBYOwdhxXeb1wgIlQ+iA4ZReBfej
9PIEmUjejkVWoVtFZnYAKGsCgYEA4sc3z5ATrR1I0kNKliSI3/R9KDfmhpk9F0C6
qebCjGiAKMj2he8d+TJi6XmOFJ07JNd074rIKs3M6J5UjQsrg/eGbZGr+67rA/rn
0j4WOaOhFyo2mIYSUVpenxgsogiZp5MdpgoPQZeiLLmXJ6EuzEMW/knJw+/79AYj
ksWyHX0CgYEA0/p6iVPLodd928Kw6ChiAifY34dO4/bj4VJ6qDLVOE4UseC+0aHz
wJLQQm8gjUmTkqKSMjFBXfuPvr+biODKGAXJg0vn1bS1PZ4oLCUZWIwWB7wUnKpX
sNIsAMum3q7bGBuK3eSqmMSdSSW3S2a+QJJxvdRyf8bPnZrrk/eUD8Q=
-----END RSA PRIVATE KEY-----`